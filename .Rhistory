data <- c(2, 8, 9, 4, 10, 3, 8, 0, 3, 7)
data
sum(data)
mean(data)
sd(data)
data <- c(2, 8, 9, 4, 10, 3, 8, 0, 3, 7, 15, 2, 4, 8, 13, 5, 7)
data <- c(2, 8, 9, 4, 10, 3, 8, 0, 3, 7)
avg <- mean(data)
data avg <- mean(data)
data-avg <- mean(data)
dataavg <- mean(data)
datas <-sd(data)
datas^2
var(data)
sqrt(10)
(dataavg - 0)/(datas/sqrt10)
(dataavg - 0)/(datas/sqrt(10))
(dataavg - 3)/(datas/sqrt(10))
?t.test
t.test(x=data, y=NULL, alternative = c("two.sided"), mu = 0, paired = false, var.equal = FALSE, conf.level = 0.95, ...)
t.test(x=data, y=NULL, alternative = c("two.sided"), mu = 0, paired = false, var.equal = FALSE, conf.level = 0.95)
t.test(x=data, y=NULL, alternative = c("greater"), mu = 3, conf.level = 0.95)
t.test(x=data, y=NULL, alternative = c("two.sided"), mu = 3, conf.level = 0.95)
q()
data95<- c( 11.176, 7.089, 8.097, 11.739, 11.291, 10.759, 6.467, 8.315 )
data100 <- c(5.263, 6.748, 7.461, 7.015, 8.133, 7.418, 3.772, 8.963)
sd(data95)
sd(data100)
sd95<-sd(data95)
sd100<-sd(data100)
sd95
=7*sd95+7*sd100
7*sd95+7*sd100
(7*sd95+7*sd100)/12
sqroot(7*sd95+7*sd100)/12
sroot(7*sd95+7*sd100)/12
rad(7*sd95+7*sd100)/12
root(7*sd95+7*sd100)/12
mean(data95)
mean(data100)
(mean(data95)-mean(data100))/(1.477/2)
data5<-c(12, 8, 14, 20, 26, 26, 20, 21, 18, 24, 30, 21, 18, 16, 10, 20)
avg(data5)
mean(data5)
n(data5)
count(data5)
count.fields(data5)
sd(data5)
dataA<- c(11.56,9.16,10.81,11.35,6.04,8.6,9.72,12.26)
sd(dataA)
dataB<- c(16.41,18.52,14.13,12.49,16.29,14.54,14.60,15.79)
sd(dataB)
data13k <- c(1.186,1.151,1.322,1.339,1.200,1.402,1.365,1.537,1.559)
data13l <- c(1.061,.992,1.063,1.062,1.065,1.178,1.037,1.086,1.052)
t.test(data13k,data13l,two-sided,0, TRUE, TRUE, .95 )
t.test(data13k,data13l,two.sided,0, TRUE, TRUE, .95 )
t.test(data13k,data13l,"two.sided",0, TRUE, TRUE, .95 )
data14before <- c(10,3,4,8,8,9,5,7,1,7)
data14after <- c(8,4,2,5,7,8,4,5,2,5)
mean(data14before-data14after)
sd(data14before-data14after)
t.test(data14before,data14after,"two.sided",0, TRUE, TRUE, .95 )
mean(data14before)
mean(data14after)
t.test(data14before,data14after,"two.sided",0, FALSE, TRUE)
sd(data14before)
sd(data14after)
1-pf(1.6242,6,6)
1-pf(3.7288,1,6)
1-pf(3.7288,1,6)
1-pf(3.7288,6,1)
1-pf(3.7288,1,6)
1-pf(3.17772,1,6)
1-pf(40.7961,1,6)
1-pf(7.8949,1,6)
1-pf(5.99,1,6)
boxplot(1,2,2,3,3,3,4,4,5)
b <- c(1,2,2,3,3,3,4,4,5)
bplot(b)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,200)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,20)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,20)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,10)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5,)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,3,3,3,3,4,4,5)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,3,3,4,4,5)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,4,4,5)
boxplot(b)
b <- c(1,2,2,3,3,3,3,3,3,4,4,5,20)
boxplot(b)
b <- c(1,1,2,2,3,3,3,3,3,3,4,4,5,20)
boxplot(b)
qt(c(.25,.75))
qt(c(.25,.75), df=1000000)
p-value(.6745)
cancer <- read.csv("~/cancer.txt", sep="")
View(cancer)
View(cancer)
## Same EDA, but on the complete fish data set
fish <- read.table("fish.txt", header=TRUE)
## Same EDA, but on the complete fish data set
fish <- read.table("cancer.txt", header=TRUE)
# OR #
fish <- read.table(header=TRUE, text="
method     aroma flavor texture moisture
1         5.4  6.0  6.3  6.7
1         5.2  6.5  6.0  5.8
1         6.1  5.9  6.0  7.0
1         4.8  5.0  4.9  5.0
1         5.0  5.7  5.0  6.5
1         5.7  6.1  6.0  6.6
1         6.0  6.0  5.8  6.0
1         4.0  5.0  4.0  5.0
1         5.7  5.4  4.9  5.0
1         5.6  5.2  5.4  5.8
1         5.8  6.1  5.2  6.4
1         5.3  5.9  5.8  6.0
2         5.0  5.3  5.3  6.5
2         4.8  4.9  4.2  5.6
2         3.9  4.0  4.4  5.0
2         4.0  5.1  4.8  5.8
2         5.6  5.4  5.1  6.2
2         6.0  5.5  5.7  6.0
2         5.2  4.8  5.4  6.0
2         5.3  5.1  5.8  6.4
2         5.9  6.1  5.7  6.0
2         6.1  6.0  6.1  6.2
2         6.2  5.7  5.9  6.0
2         5.1  4.9  5.3  4.8
3         4.8  5.0  6.5  7.0
3         5.4  5.0  6.0  6.4
3         4.9  5.1  5.9  6.5
3         5.7  5.2  6.4  6.4
3         4.2  4.6  5.3  6.3
3         6.0  5.3  5.8  6.4
3         5.1  5.2  6.2  6.5
3         4.8  4.6  5.7  5.7
3         5.3  5.4  6.8  6.6
3         4.6  4.4  5.7  5.6
3         4.5  4.0  5.0  5.9
3         4.4  4.2  5.6  5.5")
fish[,3] ## these are the flavor scores...also called fish$flavor
cancer
cancer [,1]
mean(cANCER[,1])
mean(cancer[,1])
mean(cancer[,4])
mean(cancer[1,4])
tapply(fish[,3],fish[,1],mean)
tapply(cancer[,4],cancer[,1],mean)
tapply(cancer[,4],cancer[,1],sd)
boxplot(cancer[,4],cancer[,1])
boxplot(cancer)
boxplot(cancer[,4])
boxplot(cancer[,4]~cancer[,1])
logsurv <- log(cancer$days)
tapply(logsurv[,4],logsurv[,1],mean)
tapply(logsurv[,4],logsurv[,1],sd)
tapply(logsurv[,4],cancer[,1],sd)
tapply(logsurv[,4],cancer[,1],mean)
logsurv <- log(cancer$days)
test<- c(3,5,7,8)
sd(test)
test<- c(30,50,70,80)
sd(test)
test<- c(-30,-50,-70,-80)
sd(test)
tapply(logsurv,cancer[,1],mean)
tapply(logsurv,cancer[,1],sd)
boxplot(logsurv~cancer[,1])
sample(1:36,36,replace=FALSE)
x<- rnorm(1000)
boxplot(x)
x<- rnorm(1000)
boxplot(x)
pvalue(2.075255)
pval(2.075255)
pr(2.075255,3,19)
pval(2.075255,3,19)
pf(2.075255,3,19)
pf(2.07525,3,19)
1- pf(2.07525,3,19)
sd(-1.13,-.63,-.38,-.13,2.88,-.63)
sd(-1.13,-.63,-.38,-.13,2.88,-.63)
sd(-1.13,-63,-.38,-.13, 2.88,-.63)
sd(-1.13,-.63,-.38,-.13, 2.88,-.63)
sd(-1.13,-0.63,-0.38,-0.13, 2.88,-0.63)
sd(c(-1.13,-0.63,-0.38,-0.13, 2.88,-0.63)
sd(c(-1.13,-0.63,-0.38,-0.13, 2.88,-0.63))
sd(c(-1.13,-0.63,-0.38,-0.13, 2.88,-0.63))
sd(c(-.38,-1.38,-1.38,.38,-.88,3.63))
sd(c(-.63,.38,-2.63,-.13,1.63,1.38))
sd(c(.9,-.85,-.35,1.15,-.85)
sd(c(.9,-.85,-.35,1.15,-.85))
sd(c(.9,-.85,-.35,1.15,-.85))
pf(6,90061,1,38)
pf(6,90061,38,1)
model <- lm(cancer~ type)
model <-lm(cancer~type)
cancer [,1]
tapply(cancer[,4],cancer[,1],mean)
model <-lm(cancer[,1])
cancer <- cancer [,1][,4]
cancer.model <- lm(logsurv~factor(cancer[,1]))
anova(cancer.model)
tapply(logsurv,cancer[,1],mean)
tapply(logsurv,cancer[,1],mean)
type <- cancer[,1]
cancer.model <- lm(logsurv~factor(type))
anova(cancer.model)
cancer.model <- lm(logsurv~type)
anova(cancer.model)
tapply(logsurv,type,mean)
cancer <-read.csv("cancer.csv", header="TRUE")
sd <-4.7
sd
sd <- (4.7)
sd
A <- (21)
B <- (23)
C <- (25)
D <- (27)
power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=2)
pow <- power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=2)
names(pow)
pow$power
pow <- power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
ns <- 2:50
pow <- power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
names(pow)
pow$power
# Power analysis for example in class
ns <- 2:50
powers <- power.anova.test(groups=5, between.var=var(c(0,0,0,0,10)),
within.var=11.67^2, sig.level=0.05, n=ns)$power
plot(ns,powers,type="l",ylim=c(0,1))
plot(ns,powers,type="l",ylim=c(0,1))
ns <- 2:50
pow <- power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
names(pow)
pow$power
plot(ns,powers,type="l",ylim=c(0,1))
sample_size <- 2:50
ACT <- power.anova.test(groups=4, between.var=var(c(21,23,25,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
names(ACT)
ACT$power
plot(sample_size,powers,type="l",ylim=c(0,1))
sample_size <- 2:50
ACT <- power.anova.test(groups=4, between.var=var(c(21,21,21,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
names(ACT)
ACT$power
plot(sample_size,powers,type="l",ylim=c(0,1))
ACT <- power.anova.test(groups=4, between.var=var(c(21,21,27,27)), within.var=4.7^2,
sig.level=0.05, n=ns)
names(ACT)
ACT$power
plot(sample_size,powers,type="l",ylim=c(0,1))
#Compare means of Pot Sizes
mean(Time[Pot=="Large"])
mean(Time[Pot=="Medium"])
mean(Time[Pot=="Small"])
# Read in data and define factors
boilwater<- read.csv("boilwater.csv", header=TRUE)
Pot <- as.factor(boilwater[,1])
Burner <- as.factor(boilwater[,2])
Lid <- as.factor(boilwater [,3])
Time <- boilwater [,4]
#Compare means of Pot Sizes
mean(Time[Pot=="Large"])
mean(Time[Pot=="Medium"])
mean(Time[Pot=="Small"])
t.test(Pot=="Large",sd="11.81947545",df=26)
t.test(Time(Pot=="Large"),sd="11.81947545",df=26)
t.test(Time[Pot=="Large"],sd="11.81947545",df=26)
t.test(Time[Pot=="Large"],statistic="2.056")
confint(model)
# Conduct ANOVA test
model <- lm(data=boilwater, Time~Burner+Pot+Lid+Burner:Pot+Burner:Lid+Lid:Pot)
anova(model)
confint(model)
confint(model,Pot)
confint(model,Burner)
confint(model,Time[Pot=="Large")
confint(model,Time[Pot=="Large"])
confint(model)
SigHatSq <- sum(rediuals(model)^2/(26))
SigHatSq <- sum(residuals(model)^2/(26))
SigHatSq
Sqrt(SigHatSq)
sqrt(SigHatSq)
sqrt(SigHatSq)
Stnderr <- 2.056*sqrt(SigHatSq)/12
mean(Time[Pot=="Large"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
tapply(Time,Pot,mean)
tapply(residuals(model))
interval(Time~Pot)
t.test(Time[Pot=="Large"])
mean(Time[Pot=="Large"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Medium"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Small"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
error.bars(boilwater,stats=NULL, ylab = Time,xlab=Pot,
main="Confidence Intervals for Pot Sizes",eyes=TRUE, ylim = NULL, xlim=NULL,alpha=.05,sd=FALSE, labels = NULL,
pos = NULL,  arrow.len = 0.05,arrow.col="black", add = FALSE,bars=FALSE,within=FALSE,
col="blue",...)
36*mean(Time)^2
tapply(Time,Pot,mean)
tapply(residuals(model))
model4 <- lm(data=boilwater, Time~Burner+Pot+Lid+Burner:Pot)
anova(model4)
hist(residuals(model4))
mean(Time[Pot=="Large"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Medium"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Small"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Large",Burner=="Small"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Large", Burner=="Small"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Large"[Burner=="Small"])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
mean(Time[Pot=="Large"[Burner=="Small"]])+c(-1,1)*qt(0.975, df=26)*sqrt(SigHatSq)/12
#CHECKING FOR EXPECTED SAMPLE SIZE AND POWER
#A variance of 15^2 was assumed, given that almost all of the observations were expected to fall within a minute and a half of each other, and since 99.7% of the data falls within three standard deviations on either side of the mean, this gave us an expected standard deviation of 15.
ns<- 2:50
Boil <- power.anova.test(groups=12, between.var=var(c(30,30,30,30,30,30,0,0,0,0,0,0)), within.var=15^2,
sig.level=0.05, n=ns)
names(Boil)
Boil$power
plot(sample_size,powers,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
tapply(Time,Pot,mean)
tapply(Time,Pot,sd)
tapply(Time,Pot,mean)
tapply(residuals(model))
interval(Time~Pot)
interaction.plot(Pot, Lid, Time, main="Interaction for Pot Size and Lid Presence")
interaction.plot(Burner, Lid, Time, main="Interaction for Burner Size and Lid Presence")
hist(residuals(model.no_3way),main=Histrogram of Residuals (no Three way interaction))
hist(residuals(model.no_3way),main="Histrogram of Residuals (no Three way interaction)")
#this histogram is nonnormal, so normality without three-way interaction will be checked
#Checking for normality of residuals without 3-way interaction
model.no_3way <- lm(data=boilwater, Time~Burner+Pot+Lid+Burner:Pot+Burner:Lid+Lid:Pot)
residuals(model.no_3way)
hist(residuals(model.no_3way),main="Histrogram of Residuals (no Three way interaction)")
hist(residuals(model.no_3way),main="Histrogram of Residuals (no 3way interaction)")
hist(residuals(model.no_3way),main="Residuals Histogram (no 3way interaction)")
hist(residuals(model.no_3way),main="Residuals Histogram (no three-way interaction)")
hist(residuals(model.no_3way),main="Residuals Histogram without three-way interaction")
hist(residuals(model.no_3way),main="Residuals Without three-way interaction")
hist(residuals(model.3way),main="Residuals With Three-way Interaction in model")
#Checking for normality of residuals with 3-way interaction
model.3way <- lm(data=boilwater, Time~Burner+Pot+Lid+Burner:Pot+Burner:Lid+Lid:Pot+Burner:Pot:Lid)
residuals(model.3way)
hist(residuals(model.3way),main="Residuals With Three-way Interaction in model")
hist(residuals(model.3way),main="Residuals With Three-way Interaction in Model")
hist(residuals(model.no_3way),main="Residuals Without Three-way Interaction in Model")
interaction.plot(Pot, Lid, Time, main="Interaction for Pot Size and Lid Presence")
interaction.plot(Burner, Lid, Time, main="Interaction for Burner Size and Lid Presence")
names(Boil)
Boil$power
plot(sample_size,powers,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
plot(sample_size,Boil,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
plot(ns,Boil,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
Boil$power
plot(ns,Boil,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
plot(ns,Boil$power,type="l",ylim=c(0,1)) #this shows what power each sample size n will give. The first one over 80% was chosen, which was 3.
#This histogram is normal, so this assumption is met
# Conduct ANOVA test
model <- lm(data=boilwater, Time~Burner+Pot+Lid+Burner:Pot+Burner:Lid+Lid:Pot) #this fits the data as a linear model
anova(model) #this runs an ANOVA test
1-pf(6.1945,26,2)
1-pf(6.1945,2,26)
5+5
5+3
source('~/.active-rstudio-document')
source('~/.active-rstudio-document', echo=TRUE)
##Libraries
library(tidyverse)
##Libraries
install.packages("tidyverse")
library(tidyverse)
library(vroom)
bike <- vroom("./train.csv")
setwd("~/Braden/Uni/Classes/Semester7/Stat348/Stat348/projects/KaggleBikeShare/KaggleBikeShare")
bike <- vroom("./train.csv")
dplyr::glimpse(dataset)
dplyr::glimpse(bike)
install.packages("skimr")
skimr::skim(bike)
install.packages("DataExplorer")
DataExplorer::plot_intro(dataset)
DataExplorer::plot_intro(bike)
DataExplorer::plot_bar(bike)
DataExplorer::plot_correlation(bike)
DataExplorer::plot_histogram(bike)
install.packages("patchwork")
DataExplorer::plot_correlation(bike)
DataExplorer::plot_histogram(bike)
DataExplorer::plot_bar(bike)
DataExplorer::plot_correlation(bike)
ggplot(data=bike, mapping=aes(x = season, y = count )) +
geom_point() +
geom_smooth(se=FALSE)
ggplot(data=bike, mapping=aes(x = temp, y = count )) +
geom_point() +
geom_smooth(se=FALSE)
DataExplorer::plot_correlation(bike)
ggplot(data=bike, mapping=aes(x = temp, y = atemp )) +
geom_point() +
geom_smooth(se=FALSE)
(plot1 + plot2)/(plot3 + plot4)
plot1 <- DataExplorer::plot_correlation(bike)
plot2 <- DataExplorer::plot_histogram(bike)
plot3 <- DataExplorer::plot_bar(bike)
plot4 <- ggplot(data=bike, mapping=aes(x = temp, y = atemp )) +
geom_point() +
geom_smooth(se=FALSE)+
labs(title="Check for collinearity between temp and atemp")
(plot1 + plot2)/(plot3 + plot4)
plot4 <- ggplot(data=bike, mapping=aes(x = temp, y = count )) +
geom_point() +
geom_smooth(se=FALSE)+
labs(title="Check for relationship between temp and count")
plot4
DataExplorer::plot_correlation(bike)
ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_point() +
geom_smooth(se=FALSE)+
labs(title="Check for relationship between windspeed and count")
(plot1 + plot2) / (plot3 + plot4)
library(patchwork)
(plot1 + plot2) / (plot3 + plot4)
(plot1 + plot2)/(plot3 + plot4)
plot1 <- DataExplorer::plot_correlation(bike)
plot2 <- DataExplorer::plot_histogram(bike)
plot3 <- DataExplorer::plot_bar(bike)
plot4 <- ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_point() +
geom_smooth(se=FALSE)+
labs(title="Check for relationship between windspeed and count")
(plot1 + plot2)/(plot3 + plot4)
(plot1 + plot2)/(plot3 + plot4)
plot1/plot3
(plot1+plot2)/plot3
(plot1 + plot2)/(plot3 + plot4)
plot4 <- ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
(plot1 + plot2)/(plot3+plot4)
ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
plot4 <- ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_bar() +
labs(title="Check for relationship between windspeed and count")
ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_bar() +
labs(title="Check for relationship between windspeed and count")
ggplot(data=bike, mapping=aes(x = windspeed, y = count )) +
geom_bar() +
labs(title="Check for relationship between windspeed and count")
ggplot(data=bike, mapping=aes(x = windspeed, y = count)) +
geom_density() +
labs(title="Check for relationship between windspeed and count")
plot4 <- ggplot(data=bike, mapping=aes(x = windspeed, y = count)) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
ggplot(data=bike, mapping=aes(x = windspeed, y = count)) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
library(patchwork)
(plot1 + plot2)/(plot3+plot4)
(plot3+plot4)
plot3
plot3 <- DataExplorer::plot_bar(bike)
plot3 <- DataExplorer::plot_bar(bike)
plot4 <- ggplot(data=bike, mapping=aes(x = windspeed, y = count)) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
(plot3+plot4)
dplyr::glimpse(bike)
skimr::skim(bike)
plot4 <- ggplot(data=bike, mapping=aes(x = datetime, y = count)) +
geom_point() +
labs(title="Check for relationship between windspeed and count")
plot4
plot3 <- DataExplorer::plot_intro(bike)
(plot1 + plot2)/(plot3+plot4)
plot4 <- ggplot(data=bike, mapping=aes(x = datetime, y = count)) +
geom_point() +
labs(title="Relationship between datetime and count")
(plot1 + plot2)/(plot3+plot4)
